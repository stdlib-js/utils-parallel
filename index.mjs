// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/process-cwd@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-copy@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/os-num-cpus@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";function p(e){if(e.__esModule)return e;var r=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(n){var t=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(r,n,t.get?t:{enumerable:!0,get:function(){return e[n]}})})),r}function f(e,r){for(var n=0,t=e.length-1;t>=0;t--){var i=e[t];"."===i?e.splice(t,1):".."===i?(e.splice(t,1),n++):n&&(e.splice(t,1),n--)}if(r)for(;n--;n)e.unshift("..");return e}var m=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,g=function(e){return m.exec(e).slice(1)};function h(){for(var e="",r=!1,n=arguments.length-1;n>=-1&&!r;n--){var t=n>=0?arguments[n]:"/";if("string"!=typeof t)throw new TypeError("Arguments to path.resolve must be strings");t&&(e=t+"/"+e,r="/"===t.charAt(0))}return(r?"/":"")+(e=f(E(e.split("/"),(function(e){return!!e})),!r).join("/"))||"."}function v(e){var r=b(e),n="/"===C(e,-1);return(e=f(E(e.split("/"),(function(e){return!!e})),!r).join("/"))||r||(e="."),e&&n&&(e+="/"),(r?"/":"")+e}function b(e){return"/"===e.charAt(0)}function j(){var e=Array.prototype.slice.call(arguments,0);return v(E(e,(function(e,r){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))}function w(e,r){function n(e){for(var r=0;r<e.length&&""===e[r];r++);for(var n=e.length-1;n>=0&&""===e[n];n--);return r>n?[]:e.slice(r,n-r+1)}e=h(e).substr(1),r=h(r).substr(1);for(var t=n(e.split("/")),i=n(r.split("/")),s=Math.min(t.length,i.length),o=s,d=0;d<s;d++)if(t[d]!==i[d]){o=d;break}var c=[];for(d=o;d<t.length;d++)c.push("..");return(c=c.concat(i.slice(o))).join("/")}function y(e){var r=g(e),n=r[0],t=r[1];return n||t?(t&&(t=t.substr(0,t.length-1)),n+t):"."}function x(e,r){var n=g(e)[2];return r&&n.substr(-1*r.length)===r&&(n=n.substr(0,n.length-r.length)),n}function k(e){return g(e)[3]}var O={extname:k,basename:x,dirname:y,sep:"/",delimiter:":",relative:w,join:j,isAbsolute:b,normalize:v,resolve:h};function E(e,r){if(e.filter)return e.filter(r);for(var n=[],t=0;t<e.length;t++)r(e[t],t,e)&&n.push(e[t]);return n}var C="b"==="ab".substr(-1)?function(e,r,n){return e.substr(r,n)}:function(e,r,n){return r<0&&(r=e.length+r),e.substr(r,n)},_=p(Object.freeze({__proto__:null,resolve:h,normalize:v,isAbsolute:b,join:j,relative:w,sep:"/",delimiter:":",dirname:y,basename:x,extname:k,default:O})),T=s,A={};A.workers=T-1,A.concurrency=A.workers,A.cmd="node",A.ordered=!1,A.uid=null,A.gid=null,A.encoding="buffer",A.maxBuffer=209715200;var B=A,P=o,q=d,z=c.isPrimitive,S=u.isPrimitive,I=l.isPrimitive,M=a.isPrimitive,V=n;var D=function(e,r){return P(r)?q(r,"concurrency")&&(e.concurrency=r.concurrency,!z(e.concurrency))?new TypeError(V("invalid option. `%s` option must be a positive integer. Option: `%s`.","concurrency",e.concurrency)):q(r,"workers")&&(e.workers=r.workers,!z(e.workers))?new TypeError(V("invalid option. `%s` option must be a positive integer. Option: `%s`.","workers",e.workers)):q(r,"cmd")&&(e.cmd=r.cmd,!M(e.cmd))?new TypeError(V("invalid option. `%s` option must be a string. Option: `%s`.","cmd",e.cmd)):q(r,"ordered")&&(e.ordered=r.ordered,!I(e.ordered))?new TypeError(V("invalid option. `%s` option must be a boolean. Option: `%s`.","ordered",e.ordered)):q(r,"uid")&&(e.uid=r.uid,!S(e.uid))?new TypeError(V("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","uid",e.uid)):q(r,"gid")&&(e.gid=r.gid,!S(e.gid))?new TypeError(V("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","gid",e.gid)):q(r,"maxBuffer")&&(e.maxBuffer=r.maxBuffer,!S(e.maxBuffer))?new TypeError(V("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","maxBuffer",e.maxBuffer)):null:new TypeError(V("invalid argument. Options argument must be an object. Value: `%s`.",r))},F=require("child_process").fork,J=require("path"),N=require("debug"),R=require("@stdlib/utils-keys"),$=require("@stdlib/string-format"),G=require("./options.js"),H=N("parallel:exec"),K=J.resolve("/home/runner/work/utils-parallel/utils-parallel/lib/node","./worker/index.js");module.exports=function(e,r,n){var t,i,s,o,d,c,u,l,a,p,f;for(H("Options: %s.",JSON.stringify(r)),t=0,H("Creating %d workers...",r.workers),i={},d=[],o=G(r),f=0;f<r.workers;f++)H("Creating child process..."),(c=F(K,d,o)).on("error",w(c)),c.on("close",h(c)),c.on("exit",v(c)),c.on("disconnect",j(c)),c.on("message",g(c)),H("Child process created. pid: %d.",c.pid),i[c.pid]=c;for(u=R(i),H("%d workers created.",u.length),H("Running %d scripts concurrently...",r.concurrency),s={},a=-1,f=0;f<r.concurrency;f++)l=u[f%u.length],m(i[l]);function m(r){var n;if((a+=1)>=e.length)return(n=R(s).length)>0?void H("%d scripts are pending.",n):(H("All scripts have finished."),b());H("Instructing child process to run script: %s. pid: %d.",e[a],r.pid),r.send(e[a]),s[e[a]]=!0,H("%d of %d scripts have been processed.",a,e.length)}function g(e){return function(r){H("Child process message: %s. pid: %d.",r,e.pid),delete s[r],m(e)}}function h(e){return function(i,s){H("Child process closed. Code: %d. Signal: %s. pid: %d.",i,s,e.pid),y(i,s),H("%d of %d child processes have closed.",t+=1,r.workers),t===r.workers&&function(){if(p)return n(p);n()}()}}function v(e){return function(r,n){H("Child process exited. Code: %d. Signal: %s. pid: %d.",r,n,e.pid),y(r,n)}}function b(e){var r,n,t;for(e&&!p&&(p=e),H("Instructing child processes to close..."),r=R(i),t=0;t<r.length;t++)n=r[t],H("Instructing child process (pid: %d) to close...",n),i[n].send("close")}function j(e){return function(){H("Child process disconnected. pid: %d.",e.pid)}}function w(e){return function(r){H("Child process error: %s. pid: %d.",r.message,e.pid),b(r)}}function y(e,r){var n;if(!p)return null!==e&&0!==e?n=new Error($("Child process failed with exit code: `%u`.",e)):null!==r&&(n=new Error($("Child process failed due to termination signal: `%s`.",r))),n?(n.code=e,n.signal=r,b(n)):void 0}};var L=p(Object.freeze({__proto__:null})),Q=_,U=e.primitives,W=r,X=n,Y=t,Z=i,ee=B,re=D,ne=L;var te=function(){var e,r,n,t,i,s;if(!U(e=arguments[0]))throw new TypeError(X("invalid argument. First argument must be an array of strings. Value: `%s`.",e));if(e=e.slice(),r=Z(ee),arguments.length>2){if(n=arguments[2],t=re(r,arguments[1]))throw t}else n=arguments[1];if(!W(n))throw new TypeError(X("invalid argument. Callback argument must be a function. Value: `%s`.",n));for(r.concurrency>e.length&&(r.concurrency=e.length),r.workers>r.concurrency&&(r.workers=r.concurrency),i=Y(),s=0;s<e.length;s++)e[s]=Q.resolve(i,e[s]);function o(e){if(e)return n(e);n()}ne(e,r,o)};export{te as default};
//# sourceMappingURL=index.mjs.map
